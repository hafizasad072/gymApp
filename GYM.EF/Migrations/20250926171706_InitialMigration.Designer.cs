// <auto-generated />
using System;
using GYM.EF.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GYM.EF.Migrations
{
    [DbContext(typeof(GYMContext))]
    [Migration("20250926171706_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GYM.EF.Models.Attendance", b =>
                {
                    b.Property<long>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AttendanceId"));

                    b.Property<int>("AttendanceTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckinAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<DateTime?>("CheckoutAt")
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)");

                    b.Property<Guid>("GymId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Metadata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AttendanceId")
                        .HasName("PK__Attendan__8B69261C2F0980EB");

                    b.HasIndex("AttendanceTypeId");

                    b.HasIndex("GymId");

                    b.HasIndex("SourceId");

                    b.HasIndex("UserId");

                    b.ToTable("Attendance");
                });

            modelBuilder.Entity("GYM.EF.Models.AttendanceSources", b =>
                {
                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SourceId")
                        .HasName("PK__Attendan__16E01919881B938B");

                    b.ToTable("AttendanceSources");
                });

            modelBuilder.Entity("GYM.EF.Models.AttendanceTypes", b =>
                {
                    b.Property<int>("AttendanceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AttendanceTypeId")
                        .HasName("PK__Attendan__F843372C499D0905");

                    b.ToTable("AttendanceTypes");
                });

            modelBuilder.Entity("GYM.EF.Models.AuditLogs", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AuditId"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entity")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EntityId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AuditId")
                        .HasName("PK__AuditLog__A17F23980ED1BCCD");

                    b.HasIndex("UserId");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("GYM.EF.Models.BodyMetricSources", b =>
                {
                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SourceId")
                        .HasName("PK__BodyMetr__16E01919974C543E");

                    b.ToTable("BodyMetricSources");
                });

            modelBuilder.Entity("GYM.EF.Models.BodyMetricTypes", b =>
                {
                    b.Property<int>("MetricTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MetricTypeId")
                        .HasName("PK__BodyMetr__79DBA0640DC350AC");

                    b.ToTable("BodyMetricTypes");
                });

            modelBuilder.Entity("GYM.EF.Models.BodyMetrics", b =>
                {
                    b.Property<long>("BodyMetricId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("BodyMetricId"));

                    b.Property<DateTime>("MeasuredAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MetricTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("BodyMetricId")
                        .HasName("PK__BodyMetr__98BBF337F3D97F61");

                    b.HasIndex("MetricTypeId");

                    b.HasIndex("SourceId");

                    b.HasIndex(new[] { "MemberId", "MeasuredAt" }, "IX_BodyMetrics_Member_MeasuredAt")
                        .IsDescending(false, true);

                    b.ToTable("BodyMetrics");
                });

            modelBuilder.Entity("GYM.EF.Models.ClassBookingStatuses", b =>
                {
                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StatusId")
                        .HasName("PK__ClassBoo__C8EE2063275BC5E9");

                    b.ToTable("ClassBookingStatuses");
                });

            modelBuilder.Entity("GYM.EF.Models.ClassBookings", b =>
                {
                    b.Property<Guid>("ClassBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("BookedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<DateTime?>("CancelledAt")
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)");

                    b.Property<Guid>("ClassScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("ClassBookingId")
                        .HasName("PK__ClassBoo__65EFAA38F1AD8842");

                    b.HasIndex("MemberId");

                    b.HasIndex("StatusId");

                    b.HasIndex(new[] { "ClassScheduleId", "MemberId" }, "UQ_ClassBooking_Member_Schedule")
                        .IsUnique();

                    b.ToTable("ClassBookings");
                });

            modelBuilder.Entity("GYM.EF.Models.ClassSchedules", b =>
                {
                    b.Property<Guid>("ClassScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndAt")
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("StartAt")
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)");

                    b.HasKey("ClassScheduleId")
                        .HasName("PK__ClassSch__6A8D56FECA019668");

                    b.HasIndex("ClassId");

                    b.ToTable("ClassSchedules");
                });

            modelBuilder.Entity("GYM.EF.Models.Classes", b =>
                {
                    b.Property<Guid>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("Capacity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(20);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GymId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("TrainerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClassId")
                        .HasName("PK__Classes__CB1927C0A818FADD");

                    b.HasIndex("GymId");

                    b.HasIndex("TrainerId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("GYM.EF.Models.DiscussionMessages", b =>
                {
                    b.Property<Guid>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<Guid>("DiscussionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FromUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MessageId")
                        .HasName("PK__Discussi__C87C0C9C288520FD");

                    b.HasIndex("DiscussionId");

                    b.HasIndex("FromUserId");

                    b.ToTable("DiscussionMessages");
                });

            modelBuilder.Entity("GYM.EF.Models.Discussions", b =>
                {
                    b.Property<Guid>("DiscussionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GymId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsFranchiseWide")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("DiscussionId")
                        .HasName("PK__Discussi__7E8E39C0DADA1FB5");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("GymId");

                    b.ToTable("Discussions");
                });

            modelBuilder.Entity("GYM.EF.Models.Exercises", b =>
                {
                    b.Property<Guid>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Equipment")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("GymId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("MuscleGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ExerciseId")
                        .HasName("PK__Exercise__A074AD2FED041E25");

                    b.HasIndex("GymId");

                    b.HasIndex("MuscleGroupId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("GYM.EF.Models.ExternalProviders", b =>
                {
                    b.Property<Guid>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("ExternalUserId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("LastSyncAt")
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("ProviderName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProviderId")
                        .HasName("PK__External__B54C687DE6358206");

                    b.HasIndex("UserId");

                    b.ToTable("ExternalProviders");
                });

            modelBuilder.Entity("GYM.EF.Models.Feedbacks", b =>
                {
                    b.Property<Guid>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<Guid?>("ForTrainerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FromUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GymId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId")
                        .HasName("PK__Feedback__6A4BEDD6FFA03952");

                    b.HasIndex("ForTrainerId");

                    b.HasIndex("FromUserId");

                    b.HasIndex("GymId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("GYM.EF.Models.Gyms", b =>
                {
                    b.Property<Guid>("GymId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("OwnerUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Timezone")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("GymId")
                        .HasName("PK__Gyms__1A3A7C96E4CB0A10");

                    b.ToTable("Gyms");
                });

            modelBuilder.Entity("GYM.EF.Models.InvoiceStatuses", b =>
                {
                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StatusId")
                        .HasName("PK__InvoiceS__C8EE206316AC62B4");

                    b.ToTable("InvoiceStatuses");
                });

            modelBuilder.Entity("GYM.EF.Models.Invoices", b =>
                {
                    b.Property<Guid>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("USD");

                    b.Property<Guid>("GymId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("IssuedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PaidAt")
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InvoiceId")
                        .HasName("PK__Invoices__D796AAB5CF7DD1D9");

                    b.HasIndex("GymId");

                    b.HasIndex("MemberId");

                    b.HasIndex("StatusId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("GYM.EF.Models.Leagues", b =>
                {
                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("LeagueId")
                        .HasName("PK__Leagues__10ABBCF4A25A99DB");

                    b.ToTable("Leagues");
                });

            modelBuilder.Entity("GYM.EF.Models.Members", b =>
                {
                    b.Property<Guid>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("GymId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("JoinDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(CONVERT([date],sysutcdatetime()))");

                    b.Property<int?>("LeagueId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MemberId")
                        .HasName("PK__Members__0CF04B18A7D8BA1C");

                    b.HasIndex("GymId");

                    b.HasIndex("LeagueId");

                    b.HasIndex("UserId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("GYM.EF.Models.MembershipPlans", b =>
                {
                    b.Property<Guid>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("BillingCycle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("DurationDays")
                        .HasColumnType("int");

                    b.Property<Guid>("GymId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("PlanId")
                        .HasName("PK__Membersh__755C22B704D891B6");

                    b.HasIndex("GymId");

                    b.ToTable("MembershipPlans");
                });

            modelBuilder.Entity("GYM.EF.Models.MuscleGroups", b =>
                {
                    b.Property<int>("MuscleGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MuscleGroupId")
                        .HasName("PK__MuscleGr__097AE866E153F62E");

                    b.ToTable("MuscleGroups");
                });

            modelBuilder.Entity("GYM.EF.Models.NotificationStatuses", b =>
                {
                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StatusId")
                        .HasName("PK__Notifica__C8EE2063D1AB1289");

                    b.ToTable("NotificationStatuses");
                });

            modelBuilder.Entity("GYM.EF.Models.Notifications", b =>
                {
                    b.Property<long>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("NotificationId"));

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<Guid?>("GymId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SentAt")
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("TemplateKey")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("ToUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E12864F96B5");

                    b.HasIndex("GymId");

                    b.HasIndex("StatusId");

                    b.HasIndex("ToUserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("GYM.EF.Models.Payments", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("GymId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("PaidAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("ProviderTransactionId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payments__9B556A3826148D30");

                    b.HasIndex("GymId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("MemberId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("GYM.EF.Models.Permissions", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("PermissionId")
                        .HasName("PK__Permissi__EFA6FB2F54488543");

                    b.HasIndex(new[] { "Name" }, "UQ__Permissi__737584F6A9828297")
                        .IsUnique();

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("GYM.EF.Models.RolePermissions", b =>
                {
                    b.Property<Guid>("RolePermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RolePermissionId")
                        .HasName("PK__RolePerm__120F46BA5E7A4791");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("GYM.EF.Models.Roles", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE1A4107754E");

                    b.HasIndex(new[] { "Name" }, "UQ__Roles__737584F6D98D07C1")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("GYM.EF.Models.SessionLogs", b =>
                {
                    b.Property<Guid>("SessionLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PerformedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<Guid?>("TrainerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WorkoutPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SessionLogId")
                        .HasName("PK__SessionL__96CBDF0B9E9C409A");

                    b.HasIndex("MemberId");

                    b.HasIndex("TrainerId");

                    b.HasIndex("WorkoutPlanId");

                    b.ToTable("SessionLogs");
                });

            modelBuilder.Entity("GYM.EF.Models.SubscriptionStatuses", b =>
                {
                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StatusId")
                        .HasName("PK__Subscrip__C8EE20630325CFAA");

                    b.ToTable("SubscriptionStatuses");
                });

            modelBuilder.Entity("GYM.EF.Models.Subscriptions", b =>
                {
                    b.Property<Guid>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("AutoRenew")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("NextBillingDate")
                        .HasColumnType("date");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("SubscriptionId")
                        .HasName("PK__Subscrip__9A2B249DCD118F9D");

                    b.HasIndex("MemberId");

                    b.HasIndex("PlanId");

                    b.HasIndex("StatusId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("GYM.EF.Models.Trainers", b =>
                {
                    b.Property<Guid>("TrainerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<Guid>("GymId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAvailable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TrainerId")
                        .HasName("PK__Trainers__366A1A7CC4A1A9D0");

                    b.HasIndex("GymId");

                    b.HasIndex(new[] { "UserId" }, "UQ__Trainers__1788CC4DB7EF9D51")
                        .IsUnique();

                    b.ToTable("Trainers");
                });

            modelBuilder.Entity("GYM.EF.Models.UserRoles", b =>
                {
                    b.Property<Guid>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("AssignedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<Guid?>("GymId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserRoleId")
                        .HasName("PK__UserRole__3D978A35D0E87002");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("GYM.EF.Models.Users", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)");

                    b.Property<byte[]>("PasswordHash")
                        .HasMaxLength(512)
                        .HasColumnType("varbinary(512)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasMaxLength(128)
                        .HasColumnType("varbinary(128)");

                    b.Property<string>("Phone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C409A861D");

                    b.HasIndex(new[] { "Email" }, "IX_Users_Email");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534E64ADB0B")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GYM.EF.Models.WorkoutDayExercises", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("Reps")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Sets")
                        .HasColumnType("int");

                    b.Property<Guid>("WorkoutDayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__WorkoutD__3214EC07295EC375");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutDayId");

                    b.ToTable("WorkoutDayExercises");
                });

            modelBuilder.Entity("GYM.EF.Models.WorkoutDayTypes", b =>
                {
                    b.Property<int>("DayTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DayTypeId")
                        .HasName("PK__WorkoutD__8E02B0F4DA8F24ED");

                    b.ToTable("WorkoutDayTypes");
                });

            modelBuilder.Entity("GYM.EF.Models.WorkoutDays", b =>
                {
                    b.Property<Guid>("WorkoutDayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("DayOrder")
                        .HasColumnType("int");

                    b.Property<string>("DayType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("WorkoutPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("WorkoutDayId")
                        .HasName("PK__WorkoutD__D459FCA9E8FE936A");

                    b.HasIndex("WorkoutPlanId");

                    b.ToTable("WorkoutDays");
                });

            modelBuilder.Entity("GYM.EF.Models.WorkoutPlans", b =>
                {
                    b.Property<Guid>("WorkoutPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DayTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GymId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsTemplate")
                        .HasColumnType("bit");

                    b.Property<Guid?>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("WorkoutPlanId")
                        .HasName("PK__WorkoutP__8C51607B9968A4ED");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("DayTypeId");

                    b.HasIndex("GymId");

                    b.HasIndex("MemberId");

                    b.ToTable("WorkoutPlans");
                });

            modelBuilder.Entity("GYM.EF.Models.Attendance", b =>
                {
                    b.HasOne("GYM.EF.Models.AttendanceTypes", "AttendanceType")
                        .WithMany("Attendance")
                        .HasForeignKey("AttendanceTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Attendanc__Atten__30C33EC3");

                    b.HasOne("GYM.EF.Models.Gyms", "Gym")
                        .WithMany("Attendance")
                        .HasForeignKey("GymId")
                        .IsRequired()
                        .HasConstraintName("FK__Attendanc__GymId__2EDAF651");

                    b.HasOne("GYM.EF.Models.AttendanceSources", "Source")
                        .WithMany("Attendance")
                        .HasForeignKey("SourceId")
                        .IsRequired()
                        .HasConstraintName("FK__Attendanc__Sourc__31B762FC");

                    b.HasOne("GYM.EF.Models.Users", "User")
                        .WithMany("Attendance")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Attendanc__UserI__2FCF1A8A");

                    b.Navigation("AttendanceType");

                    b.Navigation("Gym");

                    b.Navigation("Source");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GYM.EF.Models.AuditLogs", b =>
                {
                    b.HasOne("GYM.EF.Models.Users", "User")
                        .WithMany("AuditLogs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__AuditLogs__UserI__0D44F85C");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GYM.EF.Models.BodyMetrics", b =>
                {
                    b.HasOne("GYM.EF.Models.Members", "Member")
                        .WithMany("BodyMetrics")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__BodyMetri__Membe__70A8B9AE");

                    b.HasOne("GYM.EF.Models.BodyMetricTypes", "MetricType")
                        .WithMany("BodyMetrics")
                        .HasForeignKey("MetricTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__BodyMetri__Metri__719CDDE7");

                    b.HasOne("GYM.EF.Models.BodyMetricSources", "Source")
                        .WithMany("BodyMetrics")
                        .HasForeignKey("SourceId")
                        .IsRequired()
                        .HasConstraintName("FK__BodyMetri__Sourc__73852659");

                    b.Navigation("Member");

                    b.Navigation("MetricType");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("GYM.EF.Models.ClassBookings", b =>
                {
                    b.HasOne("GYM.EF.Models.ClassSchedules", "ClassSchedule")
                        .WithMany("ClassBookings")
                        .HasForeignKey("ClassScheduleId")
                        .IsRequired()
                        .HasConstraintName("FK__ClassBook__Class__01D345B0");

                    b.HasOne("GYM.EF.Models.Members", "Member")
                        .WithMany("ClassBookings")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__ClassBook__Membe__02C769E9");

                    b.HasOne("GYM.EF.Models.ClassBookingStatuses", "Status")
                        .WithMany("ClassBookings")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK__ClassBook__Statu__03BB8E22");

                    b.Navigation("ClassSchedule");

                    b.Navigation("Member");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("GYM.EF.Models.ClassSchedules", b =>
                {
                    b.HasOne("GYM.EF.Models.Classes", "Class")
                        .WithMany("ClassSchedules")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ClassSche__Class__7E02B4CC");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("GYM.EF.Models.Classes", b =>
                {
                    b.HasOne("GYM.EF.Models.Gyms", "Gym")
                        .WithMany("Classes")
                        .HasForeignKey("GymId")
                        .IsRequired()
                        .HasConstraintName("FK__Classes__GymId__7755B73D");

                    b.HasOne("GYM.EF.Models.Trainers", "Trainer")
                        .WithMany("Classes")
                        .HasForeignKey("TrainerId")
                        .HasConstraintName("FK__Classes__Trainer__7849DB76");

                    b.Navigation("Gym");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("GYM.EF.Models.DiscussionMessages", b =>
                {
                    b.HasOne("GYM.EF.Models.Discussions", "Discussion")
                        .WithMany("DiscussionMessages")
                        .HasForeignKey("DiscussionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Discussio__Discu__24285DB4");

                    b.HasOne("GYM.EF.Models.Users", "FromUser")
                        .WithMany("DiscussionMessages")
                        .HasForeignKey("FromUserId")
                        .IsRequired()
                        .HasConstraintName("FK__Discussio__FromU__251C81ED");

                    b.Navigation("Discussion");

                    b.Navigation("FromUser");
                });

            modelBuilder.Entity("GYM.EF.Models.Discussions", b =>
                {
                    b.HasOne("GYM.EF.Models.Users", "CreatedByUser")
                        .WithMany("Discussions")
                        .HasForeignKey("CreatedByUserId")
                        .IsRequired()
                        .HasConstraintName("FK__Discussio__Creat__1D7B6025");

                    b.HasOne("GYM.EF.Models.Gyms", "Gym")
                        .WithMany("Discussions")
                        .HasForeignKey("GymId")
                        .HasConstraintName("FK__Discussio__GymId__1E6F845E");

                    b.Navigation("CreatedByUser");

                    b.Navigation("Gym");
                });

            modelBuilder.Entity("GYM.EF.Models.Exercises", b =>
                {
                    b.HasOne("GYM.EF.Models.Gyms", "Gym")
                        .WithMany("Exercises")
                        .HasForeignKey("GymId")
                        .IsRequired()
                        .HasConstraintName("FK__Exercises__GymId__5F7E2DAC");

                    b.HasOne("GYM.EF.Models.MuscleGroups", "MuscleGroup")
                        .WithMany("Exercises")
                        .HasForeignKey("MuscleGroupId")
                        .IsRequired()
                        .HasConstraintName("FK__Exercises__Muscl__607251E5");

                    b.Navigation("Gym");

                    b.Navigation("MuscleGroup");
                });

            modelBuilder.Entity("GYM.EF.Models.ExternalProviders", b =>
                {
                    b.HasOne("GYM.EF.Models.Users", "User")
                        .WithMany("ExternalProviders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ExternalP__UserI__1209AD79");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GYM.EF.Models.Feedbacks", b =>
                {
                    b.HasOne("GYM.EF.Models.Trainers", "ForTrainer")
                        .WithMany("Feedbacks")
                        .HasForeignKey("ForTrainerId")
                        .HasConstraintName("FK__Feedbacks__ForTr__17C286CF");

                    b.HasOne("GYM.EF.Models.Users", "FromUser")
                        .WithMany("Feedbacks")
                        .HasForeignKey("FromUserId")
                        .IsRequired()
                        .HasConstraintName("FK__Feedbacks__FromU__16CE6296");

                    b.HasOne("GYM.EF.Models.Gyms", "Gym")
                        .WithMany("Feedbacks")
                        .HasForeignKey("GymId")
                        .HasConstraintName("FK__Feedbacks__GymId__18B6AB08");

                    b.Navigation("ForTrainer");

                    b.Navigation("FromUser");

                    b.Navigation("Gym");
                });

            modelBuilder.Entity("GYM.EF.Models.Invoices", b =>
                {
                    b.HasOne("GYM.EF.Models.Gyms", "Gym")
                        .WithMany("Invoices")
                        .HasForeignKey("GymId")
                        .IsRequired()
                        .HasConstraintName("FK__Invoices__GymId__45BE5BA9");

                    b.HasOne("GYM.EF.Models.Members", "Member")
                        .WithMany("Invoices")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__Invoices__Member__44CA3770");

                    b.HasOne("GYM.EF.Models.InvoiceStatuses", "Status")
                        .WithMany("Invoices")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK__Invoices__Status__489AC854");

                    b.HasOne("GYM.EF.Models.Subscriptions", "Subscription")
                        .WithMany("Invoices")
                        .HasForeignKey("SubscriptionId")
                        .IsRequired()
                        .HasConstraintName("FK__Invoices__Subscr__43D61337");

                    b.Navigation("Gym");

                    b.Navigation("Member");

                    b.Navigation("Status");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("GYM.EF.Models.Members", b =>
                {
                    b.HasOne("GYM.EF.Models.Gyms", "Gym")
                        .WithMany("Members")
                        .HasForeignKey("GymId")
                        .IsRequired()
                        .HasConstraintName("FK__Members__GymId__2180FB33");

                    b.HasOne("GYM.EF.Models.Leagues", "League")
                        .WithMany("Members")
                        .HasForeignKey("LeagueId")
                        .HasConstraintName("FK__Members__LeagueI__22751F6C");

                    b.HasOne("GYM.EF.Models.Users", "User")
                        .WithMany("Members")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Members__UserId__208CD6FA");

                    b.Navigation("Gym");

                    b.Navigation("League");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GYM.EF.Models.MembershipPlans", b =>
                {
                    b.HasOne("GYM.EF.Models.Gyms", "Gym")
                        .WithMany("MembershipPlans")
                        .HasForeignKey("GymId")
                        .IsRequired()
                        .HasConstraintName("FK__Membershi__GymId__367C1819");

                    b.Navigation("Gym");
                });

            modelBuilder.Entity("GYM.EF.Models.Notifications", b =>
                {
                    b.HasOne("GYM.EF.Models.Gyms", "Gym")
                        .WithMany("Notifications")
                        .HasForeignKey("GymId")
                        .HasConstraintName("FK__Notificat__GymId__078C1F06");

                    b.HasOne("GYM.EF.Models.NotificationStatuses", "Status")
                        .WithMany("Notifications")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK__Notificat__Statu__09746778");

                    b.HasOne("GYM.EF.Models.Users", "ToUser")
                        .WithMany("Notifications")
                        .HasForeignKey("ToUserId")
                        .HasConstraintName("FK__Notificat__ToUse__0880433F");

                    b.Navigation("Gym");

                    b.Navigation("Status");

                    b.Navigation("ToUser");
                });

            modelBuilder.Entity("GYM.EF.Models.Payments", b =>
                {
                    b.HasOne("GYM.EF.Models.Gyms", "Gym")
                        .WithMany("Payments")
                        .HasForeignKey("GymId")
                        .IsRequired()
                        .HasConstraintName("FK__Payments__GymId__4E53A1AA");

                    b.HasOne("GYM.EF.Models.Invoices", "Invoice")
                        .WithMany("Payments")
                        .HasForeignKey("InvoiceId")
                        .HasConstraintName("FK__Payments__Invoic__4C6B5938");

                    b.HasOne("GYM.EF.Models.Members", "Member")
                        .WithMany("Payments")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__Payments__Member__4D5F7D71");

                    b.Navigation("Gym");

                    b.Navigation("Invoice");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("GYM.EF.Models.RolePermissions", b =>
                {
                    b.HasOne("GYM.EF.Models.Permissions", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__RolePermi__Permi__17036CC0");

                    b.HasOne("GYM.EF.Models.Roles", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__RolePermi__RoleI__160F4887");

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GYM.EF.Models.SessionLogs", b =>
                {
                    b.HasOne("GYM.EF.Models.Members", "Member")
                        .WithMany("SessionLogs")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__SessionLo__Membe__6BE40491");

                    b.HasOne("GYM.EF.Models.Trainers", "Trainer")
                        .WithMany("SessionLogs")
                        .HasForeignKey("TrainerId")
                        .HasConstraintName("FK__SessionLo__Train__6CD828CA");

                    b.HasOne("GYM.EF.Models.WorkoutPlans", "WorkoutPlan")
                        .WithMany("SessionLogs")
                        .HasForeignKey("WorkoutPlanId")
                        .HasConstraintName("FK__SessionLo__Worko__6AEFE058");

                    b.Navigation("Member");

                    b.Navigation("Trainer");

                    b.Navigation("WorkoutPlan");
                });

            modelBuilder.Entity("GYM.EF.Models.Subscriptions", b =>
                {
                    b.HasOne("GYM.EF.Models.Members", "Member")
                        .WithMany("Subscriptions")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__Subscript__Membe__3C34F16F");

                    b.HasOne("GYM.EF.Models.MembershipPlans", "Plan")
                        .WithMany("Subscriptions")
                        .HasForeignKey("PlanId")
                        .IsRequired()
                        .HasConstraintName("FK__Subscript__PlanI__3D2915A8");

                    b.HasOne("GYM.EF.Models.SubscriptionStatuses", "Status")
                        .WithMany("Subscriptions")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK__Subscript__Statu__3E1D39E1");

                    b.Navigation("Member");

                    b.Navigation("Plan");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("GYM.EF.Models.Trainers", b =>
                {
                    b.HasOne("GYM.EF.Models.Gyms", "Gym")
                        .WithMany("Trainers")
                        .HasForeignKey("GymId")
                        .IsRequired()
                        .HasConstraintName("FK__Trainers__GymId__2A164134");

                    b.HasOne("GYM.EF.Models.Users", "User")
                        .WithOne("Trainers")
                        .HasForeignKey("GYM.EF.Models.Trainers", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Trainers__UserId__29221CFB");

                    b.Navigation("Gym");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GYM.EF.Models.UserRoles", b =>
                {
                    b.HasOne("GYM.EF.Models.Roles", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UserRoles__RoleI__1BC821DD");

                    b.HasOne("GYM.EF.Models.Users", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UserRoles__UserI__1AD3FDA4");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GYM.EF.Models.WorkoutDayExercises", b =>
                {
                    b.HasOne("GYM.EF.Models.Exercises", "Exercise")
                        .WithMany("WorkoutDayExercises")
                        .HasForeignKey("ExerciseId")
                        .IsRequired()
                        .HasConstraintName("FK__WorkoutDa__Exerc__671F4F74");

                    b.HasOne("GYM.EF.Models.WorkoutDays", "WorkoutDay")
                        .WithMany("WorkoutDayExercises")
                        .HasForeignKey("WorkoutDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__WorkoutDa__Worko__662B2B3B");

                    b.Navigation("Exercise");

                    b.Navigation("WorkoutDay");
                });

            modelBuilder.Entity("GYM.EF.Models.WorkoutDays", b =>
                {
                    b.HasOne("GYM.EF.Models.WorkoutPlans", "WorkoutPlan")
                        .WithMany("WorkoutDays")
                        .HasForeignKey("WorkoutPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__WorkoutDa__Worko__5BAD9CC8");

                    b.Navigation("WorkoutPlan");
                });

            modelBuilder.Entity("GYM.EF.Models.WorkoutPlans", b =>
                {
                    b.HasOne("GYM.EF.Models.Users", "CreatedByUser")
                        .WithMany("WorkoutPlans")
                        .HasForeignKey("CreatedByUserId")
                        .IsRequired()
                        .HasConstraintName("FK__WorkoutPl__Creat__56E8E7AB");

                    b.HasOne("GYM.EF.Models.WorkoutDayTypes", "DayType")
                        .WithMany("WorkoutPlans")
                        .HasForeignKey("DayTypeId")
                        .HasConstraintName("FK__WorkoutPl__DayTy__55F4C372");

                    b.HasOne("GYM.EF.Models.Gyms", "Gym")
                        .WithMany("WorkoutPlans")
                        .HasForeignKey("GymId")
                        .IsRequired()
                        .HasConstraintName("FK__WorkoutPl__GymId__531856C7");

                    b.HasOne("GYM.EF.Models.Members", "Member")
                        .WithMany("WorkoutPlans")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK__WorkoutPl__Membe__540C7B00");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DayType");

                    b.Navigation("Gym");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("GYM.EF.Models.AttendanceSources", b =>
                {
                    b.Navigation("Attendance");
                });

            modelBuilder.Entity("GYM.EF.Models.AttendanceTypes", b =>
                {
                    b.Navigation("Attendance");
                });

            modelBuilder.Entity("GYM.EF.Models.BodyMetricSources", b =>
                {
                    b.Navigation("BodyMetrics");
                });

            modelBuilder.Entity("GYM.EF.Models.BodyMetricTypes", b =>
                {
                    b.Navigation("BodyMetrics");
                });

            modelBuilder.Entity("GYM.EF.Models.ClassBookingStatuses", b =>
                {
                    b.Navigation("ClassBookings");
                });

            modelBuilder.Entity("GYM.EF.Models.ClassSchedules", b =>
                {
                    b.Navigation("ClassBookings");
                });

            modelBuilder.Entity("GYM.EF.Models.Classes", b =>
                {
                    b.Navigation("ClassSchedules");
                });

            modelBuilder.Entity("GYM.EF.Models.Discussions", b =>
                {
                    b.Navigation("DiscussionMessages");
                });

            modelBuilder.Entity("GYM.EF.Models.Exercises", b =>
                {
                    b.Navigation("WorkoutDayExercises");
                });

            modelBuilder.Entity("GYM.EF.Models.Gyms", b =>
                {
                    b.Navigation("Attendance");

                    b.Navigation("Classes");

                    b.Navigation("Discussions");

                    b.Navigation("Exercises");

                    b.Navigation("Feedbacks");

                    b.Navigation("Invoices");

                    b.Navigation("Members");

                    b.Navigation("MembershipPlans");

                    b.Navigation("Notifications");

                    b.Navigation("Payments");

                    b.Navigation("Trainers");

                    b.Navigation("WorkoutPlans");
                });

            modelBuilder.Entity("GYM.EF.Models.InvoiceStatuses", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("GYM.EF.Models.Invoices", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("GYM.EF.Models.Leagues", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("GYM.EF.Models.Members", b =>
                {
                    b.Navigation("BodyMetrics");

                    b.Navigation("ClassBookings");

                    b.Navigation("Invoices");

                    b.Navigation("Payments");

                    b.Navigation("SessionLogs");

                    b.Navigation("Subscriptions");

                    b.Navigation("WorkoutPlans");
                });

            modelBuilder.Entity("GYM.EF.Models.MembershipPlans", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("GYM.EF.Models.MuscleGroups", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("GYM.EF.Models.NotificationStatuses", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("GYM.EF.Models.Permissions", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("GYM.EF.Models.Roles", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("GYM.EF.Models.SubscriptionStatuses", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("GYM.EF.Models.Subscriptions", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("GYM.EF.Models.Trainers", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Feedbacks");

                    b.Navigation("SessionLogs");
                });

            modelBuilder.Entity("GYM.EF.Models.Users", b =>
                {
                    b.Navigation("Attendance");

                    b.Navigation("AuditLogs");

                    b.Navigation("DiscussionMessages");

                    b.Navigation("Discussions");

                    b.Navigation("ExternalProviders");

                    b.Navigation("Feedbacks");

                    b.Navigation("Members");

                    b.Navigation("Notifications");

                    b.Navigation("Trainers");

                    b.Navigation("UserRoles");

                    b.Navigation("WorkoutPlans");
                });

            modelBuilder.Entity("GYM.EF.Models.WorkoutDayTypes", b =>
                {
                    b.Navigation("WorkoutPlans");
                });

            modelBuilder.Entity("GYM.EF.Models.WorkoutDays", b =>
                {
                    b.Navigation("WorkoutDayExercises");
                });

            modelBuilder.Entity("GYM.EF.Models.WorkoutPlans", b =>
                {
                    b.Navigation("SessionLogs");

                    b.Navigation("WorkoutDays");
                });
#pragma warning restore 612, 618
        }
    }
}
